[{"C:\\xampp\\htdocs\\reactcards\\src\\index.js":"1","C:\\xampp\\htdocs\\reactcards\\src\\App.js":"2","C:\\xampp\\htdocs\\reactcards\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\reactcards\\src\\components\\Faq.js":"4","C:\\xampp\\htdocs\\reactcards\\src\\components\\Header.js":"5","C:\\xampp\\htdocs\\reactcards\\src\\components\\Footer.js":"6","C:\\xampp\\htdocs\\reactcards\\src\\screens\\Homescreen.js":"7","C:\\xampp\\htdocs\\reactcards\\src\\components\\Modals.js":"8","C:\\xampp\\htdocs\\reactcards\\src\\components\\Card.js":"9"},{"size":683,"mtime":1613925953468,"results":"10","hashOfConfig":"11"},{"size":678,"mtime":1613920885397,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1613636482421,"results":"13","hashOfConfig":"11"},{"size":123,"mtime":1613636831100,"results":"14","hashOfConfig":"11"},{"size":395,"mtime":1613826451427,"results":"15","hashOfConfig":"11"},{"size":392,"mtime":1613828933746,"results":"16","hashOfConfig":"11"},{"size":7924,"mtime":1613929568069,"results":"17","hashOfConfig":"11"},{"size":2202,"mtime":1613928468424,"results":"18","hashOfConfig":"11"},{"size":5736,"mtime":1613919526404,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pfrkz2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\xampp\\htdocs\\reactcards\\src\\index.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\App.js",[],["40","41"],"C:\\xampp\\htdocs\\reactcards\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\components\\Faq.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\components\\Header.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\components\\Footer.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\screens\\Homescreen.js",[],"C:\\xampp\\htdocs\\reactcards\\src\\components\\Modals.js",["42"],"/** @format */\r\nimport React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { GiCardJoker } from \"react-icons/gi\";\r\nimport shortid from \"shortid\";\r\n\r\n//https://react-bootstrap.github.io/components/modal/\r\n//stackoverflow.com/questions/63513788/how-do-i-make-a-map-of-modals-that-open-onclick-for-each-map-of-buttons\r\nexport default function Modals(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      className=\"modal\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          <p key={Date.now()}> {props.player} wins:</p>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props.deck.map((dek, idx) => {\r\n          return (\r\n            <>\r\n              <span key={idx} id=\"container\">\r\n                <div className=\"card\">\r\n                  <div className=\"value\">\r\n                    {dek[\"Value\"] !== \"-1\" ? (\r\n                      dek[\"Value\"]\r\n                    ) : (\r\n                      <IconContext.Provider\r\n                        value={{ color: \"red\", size: \"80px\" }}\r\n                      >\r\n                        <div>\r\n                          <GiCardJoker />\r\n                        </div>\r\n                      </IconContext.Provider>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      dek[\"Suit\"] === \"spades\"\r\n                        ? \"suit spades\"\r\n                        : dek[\"Suit\"] === \"hearts\"\r\n                        ? \"suit hearts\"\r\n                        : dek[\"Suit\"] === \"diamonds\"\r\n                        ? \"suit diamonds\"\r\n                        : dek[\"Suit\"] === \"clubs\"\r\n                        ? \"suit clubs\"\r\n                        : \"\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </span>\r\n            </>\r\n          );\r\n        })}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\reactcards\\src\\components\\Card.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":15},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'shortid' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]